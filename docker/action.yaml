name: Mobilecoin Docker
description: Standardized docker build and publish actions

inputs:
  build_args:
    description: New line separated list of ARG=VALUE
    required: false
    default: ""
  context:
    description: docker build context path
    required: false
    default: .
  dockerfile:
    description: Path to dockerfile
    required: false
    default: .
  flavor:
    description: New line separated list of docker meta flavor options
    required: false
    default: "latest=false"
  platforms:
    description: comma separated list of platforms to build for linux/amd64,linux/arm64
    default: ""
    required: false
  emulation:
    description: Use QEMU to emulate other platforms
    default: "false"
    required: false
  images:
    description: URL/Path to docker image registry
    required: true
  push:
    description: Publish container to docker registry?
    default: "true"
    required: false
  tags:
    description: New line separated list of tags for the docker image
    required: false
    default: ""
  target:
    description: Sets the target stage to build in Dockerfile
    required: false
    default: ""
  username:
    description: docker registry user
    default: ""
    required: false
  password:
    description: docker registry password
    default: ""
    required: false
  outputs:
    description: override the image output methods https://docs.docker.com/build/exporters/
    required: false
    default: ""
  save_digest:
    description: save the docker image digest to an artifact
    required: false
    default: "false"
  digest_artifact_prefix:
    description: prefix for the digest artifact
    required: false
    default: "digests"

outputs:
  tags:
    description: docker/meta-action tags
    value: ${{ steps.docker_meta.outputs.tags }}
  pushed:
    description: was the docker image published to the registry
    value: ${{ inputs.push }}
  digest:
    description: docker image digest
    value: ${{ steps.build.outputs.digest }}

runs:
  using: composite
  steps:
  - name: Generate Docker Tags
    id: docker_meta
    uses: docker/metadata-action@v5
    with:
      flavor: ${{ inputs.flavor }}
      images: ${{ inputs.images }}
      tags: ${{ inputs.tags }}

  # set up multi-arch support emulation
  - name: Set up QEMU
    if: inputs.emulation == 'true'
    uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

  - name: Login to DockerHub
    if: inputs.username && inputs.password
    uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
    with:
      username: ${{ inputs.username }}
      password: ${{ inputs.password }}

  - name: Publish to DockerHub
    id: build
    uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
    env:
      DOCKER_BUILD_CHECKS_ANNOTATIONS: "false"
      DOCKER_BUILD_SUMMARY: "false"
      DOCKER_BUILD_RECORD_UPLOAD: "false"
    with:
      build-args: ${{ inputs.build_args }}
      context: ${{ inputs.context }}
      file: ${{ inputs.dockerfile }}
      labels: ${{ steps.docker_meta.outputs.labels }}
      platforms: ${{ inputs.platforms }}
      push: ${{ inputs.push }}
      tags: ${{ inputs.outputs == '' && steps.docker_meta.outputs.tags || '' }}
      target: ${{ inputs.target }}
      outputs: ${{ inputs.outputs }}

  - name: Parse Image Name
    if: inputs.save_digest == 'true'
    shell: bash
    run: |
      IMAGE_NAME=${{ inputs.images }}
      echo "IMAGE_NAME=${IMAGE_NAME#*/}" >> "${GITHUB_ENV}"

  - name: Export Digest
    if: inputs.save_digest == 'true'
    shell: bash
    run: |
      mkdir -p /tmp/digests
      digest="${{ steps.build.outputs.digest }}"
      touch "/tmp/digests/${digest#sha256:}"

  - name: Upload Digests
    if: inputs.save_digest == 'true'
    uses: mobilecoinofficial/gh-actions/upload-artifact@v0
    with:
      name: ${{ inputs.digest_artifact_prefix }}-${{ env.IMAGE_NAME }}-${{ runner.arch }}
      path: /tmp/digests/*
      if-no-files-found: error
      retention-days: 1
